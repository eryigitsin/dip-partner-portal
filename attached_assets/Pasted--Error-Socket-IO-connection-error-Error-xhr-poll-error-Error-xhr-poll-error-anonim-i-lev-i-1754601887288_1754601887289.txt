[Error] Socket.IO connection error: ‚Äì Error: xhr poll error
Error: xhr poll error
	(anonim i≈ülev) (index-DXL4cxFB.js:545:80280)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:42911)
	onerror (index-DXL4cxFB.js:545:70969)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:42911)
	a (index-DXL4cxFB.js:545:76982)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:42911)
	_onError (index-DXL4cxFB.js:545:59612)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:42911)
	onError (index-DXL4cxFB.js:545:44626)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:47273)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:42911)
	_onError (index-DXL4cxFB.js:545:48780)
	(anonim i≈ülev) (index-DXL4cxFB.js:545:48543)
[Error] Notification prompting can only be done from a user gesture.
	(anonim i≈ülev) (index-DXL4cxFB.js:545:100718)
	g0 (index-DXL4cxFB.js:40:24285)
	vd (index-DXL4cxFB.js:40:42412)
	aC (index-DXL4cxFB.js:40:36628)
	Vl (index-DXL4cxFB.js:38:3281)
	UY (index-DXL4cxFB.js:40:41289)
	cc (index-DXL4cxFB.js:40:40281)
	oz (index-DXL4cxFB.js:40:35736)
	w (index-DXL4cxFB.js:25:1587)
	P (index-DXL4cxFB.js:25:1950)
[Log] Supabase auth event: ‚Äì "SIGNED_IN" ‚Äì "session:" ‚Äì "eryigitsin@gmail.com" ‚Äì "hash:" ‚Äì "" ‚Äì "pathname:" ‚Äì "/notifications" ‚Äì "full URL:" ‚Äì "https://partner.dip.tc/notifications" (index-DXL4cxFB.js, line 545)
[Log] SIGNED_IN event - hash: ‚Äì "" ‚Äì "search:" ‚Äì "" (index-DXL4cxFB.js, line 545)
[Log] üåê API Request: POST /api/auth/sync-supabase-user (index-DXL4cxFB.js, line 48)
[Log] üì¶ Request data: ‚Äì {supabaseUser: Object} (index-DXL4cxFB.js, line 48)
{supabaseUser: Object}Object
[Log] üìã Request headers: ‚Äì {Content-Type: "application/json"} (index-DXL4cxFB.js, line 48)
[Log] üîÑ Request body: ‚Äì "{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_met‚Ä¶" (index-DXL4cxFB.js, line 48)
"{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_metadata\":{\"provider\":\"email\",\"providers\":[\"email\"]}}}"
[Error] Failed to load resource: the server responded with a status of 403 () (system-config, line 0)
[Log] üåê API Request: GET /api/notifications?page=1&limit=20 (index-DXL4cxFB.js, line 48)
[Log] üì¶ Request data: ‚Äì undefined (index-DXL4cxFB.js, line 48)
[Log] üìã Request headers: ‚Äì {} (index-DXL4cxFB.js, line 48)
[Log] üîÑ Request body: ‚Äì undefined (index-DXL4cxFB.js, line 48)
[Log] üì° Response status: 200  (index-DXL4cxFB.js, line 48)
[Log] üìÑ Response headers: ‚Äì {access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", ‚Ä¶} (index-DXL4cxFB.js, line 48)
{access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", access-control-allow-origin: "https://partner.dip.tc", access-control-expose-headers: "set-cookie", ‚Ä¶}Object
[Log] ‚úÖ API request successful (index-DXL4cxFB.js, line 48)
[Log] üåê API Request: POST /api/auth/sync-supabase-user (index-DXL4cxFB.js, line 48)
[Log] üì¶ Request data: ‚Äì {supabaseUser: Object} (index-DXL4cxFB.js, line 48)
{supabaseUser: Object}Object
[Log] üìã Request headers: ‚Äì {Content-Type: "application/json"} (index-DXL4cxFB.js, line 48)
[Log] üîÑ Request body: ‚Äì "{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_met‚Ä¶" (index-DXL4cxFB.js, line 48)
"{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_metadata\":{\"provider\":\"email\",\"providers\":[\"email\"]}}}"
[Log] Supabase auth event: ‚Äì "INITIAL_SESSION" ‚Äì "session:" ‚Äì "eryigitsin@gmail.com" ‚Äì "hash:" ‚Äì "" ‚Äì "pathname:" ‚Äì "/notifications" ‚Äì "full URL:" ‚Äì "https://partner.dip.tc/notifications" (index-DXL4cxFB.js, line 545)
[Error] WebSocket connection to 'wss://partner.dip.tc/socket.io/?EIO=4&transport=websocket&sid=sYWX8_8cOeCUYZj2AAAu' failed: There was a bad response from the server.
[Log] Socket.IO connected successfully: ‚Äì "gCIwm6KCJq6WkI7CAAAw" (index-DXL4cxFB.js, line 545)
[Log] Socket.IO connected successfully: ‚Äì "qcQh2opMfLU2geivAAAx" (index-DXL4cxFB.js, line 545)
[Log] üì° Response status: 200  (index-DXL4cxFB.js, line 48)
[Log] üìÑ Response headers: ‚Äì {accept-ranges: "bytes", access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", ‚Ä¶} (index-DXL4cxFB.js, line 48)
{accept-ranges: "bytes", access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", access-control-allow-origin: "*", ‚Ä¶}Object
[Log] ‚úÖ API request successful (index-DXL4cxFB.js, line 48)
[Error] WebSocket connection to 'wss://partner.dip.tc/socket.io/?EIO=4&transport=websocket&sid=z4AInW09sWx1Rhw6AAAv' failed: There was a bad response from the server.
[Log] üì° Response status: 200  (index-DXL4cxFB.js, line 48)
[Log] üìÑ Response headers: ‚Äì {access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", ‚Ä¶} (index-DXL4cxFB.js, line 48)
{access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", access-control-allow-origin: "https://partner.dip.tc", access-control-expose-headers: "set-cookie", ‚Ä¶}Object
[Log] ‚úÖ API request successful (index-DXL4cxFB.js, line 48)
[Debug] Search endpoint requested! (init_embed.js, line 286)
> console.log("User:", JSON.stringify(window.__user__ || "No user"));
console.log("Auth state:", !!document.cookie.includes('session'));
[Log] User: ‚Äì "\"No user\""
[Log] Auth state: ‚Äì false
< undefined
[Log] Supabase auth event: ‚Äì "SIGNED_IN" ‚Äì "session:" ‚Äì "eryigitsin@gmail.com" ‚Äì "hash:" ‚Äì "" ‚Äì "pathname:" ‚Äì "/notifications" ‚Äì "full URL:" ‚Äì "https://partner.dip.tc/notifications" (index-DXL4cxFB.js, line 545)
[Log] SIGNED_IN event - hash: ‚Äì "" ‚Äì "search:" ‚Äì "" (index-DXL4cxFB.js, line 545)
[Log] üåê API Request: POST /api/auth/sync-supabase-user (index-DXL4cxFB.js, line 48)
[Log] üì¶ Request data: ‚Äì {supabaseUser: Object} (index-DXL4cxFB.js, line 48)
{supabaseUser: Object}Object
[Log] üìã Request headers: ‚Äì {Content-Type: "application/json"} (index-DXL4cxFB.js, line 48)
[Log] üîÑ Request body: ‚Äì "{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_met‚Ä¶" (index-DXL4cxFB.js, line 48)
"{\"supabaseUser\":{\"id\":\"5c783188-e59f-458e-8488-59bab7898869\",\"email\":\"eryigitsin@gmail.com\",\"user_metadata\":{\"email_verified\":true},\"app_metadata\":{\"provider\":\"email\",\"providers\":[\"email\"]}}}"
[Log] üì° Response status: 200  (index-DXL4cxFB.js, line 48)
[Log] üìÑ Response headers: ‚Äì {access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", ‚Ä¶} (index-DXL4cxFB.js, line 48)
{access-control-allow-credentials: "true", access-control-allow-headers: "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cookie", access-control-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS", access-control-allow-origin: "https://partner.dip.tc", access-control-expose-headers: "set-cookie", ‚Ä¶}Object
[Log] ‚úÖ API request successful (index-DXL4cxFB.js, line 48)
> // Quick test to run in browser console on https://partner.dip.tc
// This will help us understand exactly what's happening with notifications

console.log('üî¨ Notification Visibility Test Started');

// Test 1: Check if user is authenticated
async function checkAuth() {
  try {
    const response = await fetch('/api/auth/user');
    const user = await response.json();
    console.log('‚úÖ User authenticated:', user);
    return user;
  } catch (error) {
    console.log('‚ùå Authentication failed:', error);
    return null;
  }
}

// Test 2: Check notification count
async function checkNotifications() {
  try {
    const response = await fetch('/api/notifications/unread-count');
    const data = await response.json();
    console.log('‚úÖ Notification count:', data);
    return data;
  } catch (error) {
    console.log('‚ùå Notification count failed:', error);
    return null;
  }
}

// Test 3: Check DOM elements
function checkDOMElements() {
  const bellButton = document.querySelector('[data-testid="button-notifications"]');
  const badge = document.querySelector('[data-testid="button-notifications"] .bg-red-500');
  const messageButton = document.querySelector('[data-testid="button-messages"]');
  
  console.log('üîç DOM Elements:');
  console.log('  Bell button:', bellButton ? '‚úÖ Found' : '‚ùå Not found');
  console.log('  Notification badge:', badge ? '‚úÖ Found' : '‚ùå Not found');
  console.log('  Message button:', messageButton ? '‚úÖ Found' : '‚ùå Not found');
  
  if (bellButton) {
    console.log('  Bell button styles:', window.getComputedStyle(bellButton));
  }
  
  return { bellButton, badge, messageButton };
}

// Test 4: Check user type and permissions
function checkUserType(user) {
  if (!user) return;
  
  console.log('üë§ User Details:');
  console.log('  User Type:', user.userType || user.activeUserType);
  console.log('  Available Types:', user.availableUserTypes);
  console.log('  Email:', user.email);
  console.log('  ID:', user.id);
  
  // Check if user should see notifications
  const shouldSeeNotifications = ['master_admin', 'editor_admin', 'partner'].includes(user.userType || user.activeUserType);
  console.log('  Should see notifications:', shouldSeeNotifications ? '‚úÖ Yes' : '‚ùå No');
}

// Run all tests
async function runAllTests() {
  console.log('üöÄ Running all tests...\n');
  
  const user = await checkAuth();
  await checkNotifications();
  checkDOMElements();
  checkUserType(user);
  
  console.log('\nüèÅ Test completed. Check results above.');
  console.log('\nIf notification button is missing, the user might not have the right permissions.');
  console.log('If API calls fail, there might be a session/authentication issue.');
  console.log('If everything looks good but notifications aren\'t visible, it might be a CSS/styling issue.');
}

// Auto-run the test
runAllTests();
[Log] üî¨ Notification Visibility Test Started
[Log] üöÄ Running all tests...

< Promise {status: "pending"}
[Log] ‚ùå Authentication failed: ‚Äì SyntaxError: The string did not match the expected pattern.
SyntaxError: The string did not match the expected pattern.
[Log] ‚ùå Notification count failed: ‚Äì SyntaxError: The string did not match the expected pattern.
SyntaxError: The string did not match the expected pattern.
[Log] üîç DOM Elements:
[Log]   Bell button: ‚Äì "‚úÖ Found"
[Log]   Notification badge: ‚Äì "‚ùå Not found"
[Log]   Message button: ‚Äì "‚úÖ Found"
[Log]   Bell button styles: ‚Äì CSSStyleProperties {0: "accent-color", 1: "align-content", 2: "align-items", ‚Ä¶}
CSSStyleProperties {0: "accent-color", 1: "align-content", 2: "align-items", 3: "align-self", 4: "alignment-baseline", 5: "anchor-name", 6: "anchor-scope", 7: "animation-composition", 8: "animation-delay", 9: "animation-direction", ‚Ä¶}CSSStyleProperties
[Log] 
üèÅ Test completed. Check results above.
[Log] 
If notification button is missing, the user might not have the right permissions.
[Log] If API calls fail, there might be a session/authentication issue.
[Log] If everything looks good but notifications aren't visible, it might be a CSS/styling issue.